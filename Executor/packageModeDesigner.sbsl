конст ПутиV8 = {"eq": "c:\\Program Files\\1Cv8\\", "ne": "c:\\Program Files (x86)\\1Cv8\\"}
конст РабочийКаталогПоУмолчанию = "c:\\temp\\executor\\"

метод Скрипт(ПутьКФайлуНастроек : Строка)
    пер ФайлНастроек = новый Файл(ПутьКФайлуНастроек)
    пер Настройки = СериализацияJson.ПрочитатьОбъект(ФайлНастроек.ОткрытьПотокЧтения())

    пер ИмяБазы = Настройки["base"]
    Консоль.Записать("Имя базы: %ИмяБазы")
    пер Сервер = Настройки["server"]
    Консоль.Записать("Адрес сервера: %Сервер")
    пер Версия = Настройки["platformVersion"]
    Консоль.Записать("Версия платформы: %Версия")
    пер ИмяПользователя = Настройки["baseUsername"]
    Консоль.Записать("Пользователь  базы: %ИмяПользователя")
    пер Пароль = Настройки["basePassword"]
    Консоль.Записать("Пароль: %Пароль")
    пер РабочийКаталог = Настройки["workDirectory"]
    Консоль.Записать("Рабочий каталог: %РабочийКаталог")
    пер SQLServer = Настройки["SQLServer"]
    Консоль.Записать("SQLServer: %SQLServer")
    пер SQLUser = Настройки["SQLUser"]
    Консоль.Записать("SQLUser: %SQLUser")
    пер SQLPassword = Настройки["SQLPassword"]
    Консоль.Записать("SQLPassword: %SQLPassword")
    пер ПутьКСкрипту = Настройки["scriptPath"]
    Консоль.Записать("Путь к срипту создания копии SQL: %ПутьКСкрипту")
    ВыгрузитьКопиюСредствамиSQL(SQLServer, SQLUser, SQLPassword, ИмяБазы, ПутьКСкрипту)
    //СохранитьКонфигурациюВФайл(ИмяБазы, Сервер, ИмяПользователя, Пароль, Версия)
;

метод СохранитьКонфигурациюВФайл(ИмяБазы : Строка, Сервер : Строка, ИмяПользователя : Строка, Пароль : Строка, Версия : Строка, 
    РабочийКаталог : Строка = "")
    пер ПутьКБазе = ПолучитьПутьКБазе(ИмяБазы, Сервер)
    пер МассивАргументов = ПолучитьОбщийМассивПараметров(ПутьКБазе, ИмяПользователя, Пароль)
    
    если РабочийКаталог.Пусто()
        РабочийКаталог = РабочийКаталогПоУмолчанию        
    ;
    пер ТекущаяДата = ДатаВремя.Сейчас().Форматировать("ддММггггЧЧммсс")
    пер ИмяФайла = "%ИмяБазы%ТекущаяДата.cf"
    // МассивАргументов.Добавить("/CreateDistributionFiles")
    // МассивАргументов.Добавить("-cffile %РабочийКаталог%ИмяФайла")
    МассивАргументов.Добавить("/DumpCfg %РабочийКаталог%ИмяФайла")
    МассивАргументов.Добавить("/Out %РабочийКаталог\\logcffile.txt")

    пер Процесс = ВыполнитьКомандуПакетногоРежима(Версия, МассивАргументов)
    пока Процесс.ПолучитьКодВозврата() == Неопределено
        Консоль.Записать(Процесс.ПолучитьПотокВывода().ПрочитатьКакТекст())
    ;
    Консоль.Записать("Выгрузка завершена " + ДатаВремя.Сейчас().Форматировать("ЧЧ:мм:сс") + " Путь к файлу: %РабочийКаталог%ИмяФайла")
;

метод ВыгрузитьКопиюСредствамиSQL(SQLServer : Строка, SQLUser: Строка, SQLPassword : Строка, ИмяБазы : Строка, ПутьКСрипту : Строка, РабочийКаталог : Строка = "")
    если РабочийКаталог.Пусто()
        РабочийКаталог = РабочийКаталогПоУмолчанию        
    ;
    пер ТекущаяДата = ДатаВремя.Сейчас().Форматировать("ддММггггЧЧммсс")
    пер ИмяФайла = "%ИмяБазы%ТекущаяДата.bak"
    пер ФайлВыгрузки = "\\\\sqlserver\\temp_for_1c$\\Kozynskiy\\%ИмяФайла"

    пер МассивАргументов = новый Массив()
    МассивАргументов.Добавить("-S%SQLServer")
    МассивАргументов.Добавить("-U%SQLUser")
    МассивАргументов.Добавить("-P%SQLPassword")
    МассивАргументов.Добавить("-i%ПутьКСрипту")
    МассивАргументов.Добавить("-b")
    МассивАргументов.Добавить("-v")
    МассивАргументов.Добавить("backupdb=%ИмяБазы")
    МассивАргументов.Добавить("-v")
    МассивАргументов.Добавить("bakfile=%ФайлВыгрузки")

    пер Процесс = новый ПроцессОс("sqlcmd", МассивАргументов)
    Процесс.Запустить(СредаИсполнения.ПолучитьПеременную("temp"))
    пока Процесс.ПолучитьКодВозврата() == Неопределено
        Консоль.Записать(Процесс.ПолучитьПотокВывода().ПрочитатьКакТекст())
    ;
    Консоль.Записать("Выгрузка завершена " + ДатаВремя.Сейчас().Форматировать("ЧЧ:мм:сс") + " Путь к файлу: %РабочийКаталог%ИмяФайла")
;

// TODO Перенести в общую библиотеку, когда это будет доступно
метод ВыполнитьКомандуПакетногоРежима(Версия: Строка, МассивАргументов : Массив) : ПроцессОс
    пер АрхитектураОС: Число = ТекущаяАрхитектура()
    пер ПутьV8: Строка

    если Версия.ЧислоВхождений(".") != 3
        Консоль.ЗаписатьОшибку("Номер версии указан некорректно")
        выбросить новый ИсключениеНедопустимоеСостояние("Номер версии указан некорректно")
    ;
    выбор

    когда АрхитектураОС == 32
        ПутьV8 = ПутиV8["eq"]
    когда АрхитектураОС == 64
        ПутьV8 = ПутиV8["ne"]
    иначе
        выбросить новый ИсключениеНедопустимоеСостояние("64-разрядная платформа V8 не может быть установлена на 32-разрядной ОС")
    ;

    пер Образ = новый Файл("%ПутьV8\\%Версия\\bin\\1cv8.exe")
    если не Образ.Существует()
        выбросить новый ИсключениеНедопустимоеСостояние("Экземляр платформы 1с не обнаружен в каталоге: " + Образ.Каталог)
    ;

    пер Процесс = новый ПроцессОс(Образ.Путь, МассивАргументов)
    Процесс.Запустить(СредаИсполнения.ПолучитьПеременную("temp"))
    если не Процесс.Живой()
        Консоль.ЗаписатьОшибку("Что-то пошло не так. Процесс 1с - не живой :(")
    иначе
        Консоль.Записать("Начало выполнения операции: " + ДатаВремя.Сейчас().Форматировать("ЧЧ:мм:сс"))
    ;
    возврат Процесс
;

// TODO Перенести в общую библиотеку, когда это будет доступно
метод ПолучитьПутьКБазе(ИмяБазы : Строка, Сервер : Строка) : Строка
    пер путьКБазе : Строка
    если Сервер == "" 
        путьКБазе = "/F%ИмяБазы"
    иначе
        путьКБазе = "/s%Сервер\\%ИмяБазы"
    ;
    возврат путьКБазе   
;

// TODO Перенести в общую библиотеку, когда это будет доступно
метод ТекущаяАрхитектура(): Число
    пер Архитектура = СредаИсполнения.ПолучитьПеременную("PROCESSOR_ARCHITECTURE")
    пер Результат = 0
    выбор Архитектура.ВВерхнийРегистр()
    когда == "AMD64"
        Результат = 64
    когда == "X86"
        Результат = 32
    иначе
        Результат = 32
    ;
    возврат Результат
;

// TODO Перенести в общую библиотеку, когда это будет доступно
метод ПолучитьОбщийМассивПараметров(ПутьКБазе : Строка, ИмяПользователя : Строка, Пароль : Строка) : Массив
    пер МассивАргументов = новый Массив() 
    МассивАргументов.Добавить("DESIGNER")
    МассивАргументов.Добавить("/WA-")
    МассивАргументов.Добавить("/DISABLESTARTUPDIALOGS")
    МассивАргументов.Добавить(ПутьКБазе)
    МассивАргументов.Добавить("/N%ИмяПользователя")
    МассивАргументов.Добавить("/P%Пароль")

    возврат МассивАргументов
;